import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

public class Interface {
    private ArrayList<Onibus> listaOnibus;

    private void iniciaInterface() {
        Onibus onibus6PoaFlo = new Onibus(19.45, 6, "Porto Alegre", "Florianopolis");
        Onibus onibus6PoaCri = new Onibus(12.90, 6, "Porto Alegre", "Criciuma");
        Onibus onibus10CriFlo = new Onibus(7.30, 10, "Criciuma", "Florianopolis");
        Onibus onibus16PoaFlo = new Onibus(23.50, 16, "Porto Alegre", "Florianopolis");
        Onibus onibus16PoaCri = new Onibus(15.90, 16, "Porto Alegre", "Criciuma");
        Onibus onibus20CriFlo = new Onibus(10.30, 20, "Criciuma", "Florianopolis");

        listaOnibus = new ArrayList<>();

        listaOnibus.add(onibus6PoaFlo);
        listaOnibus.add(onibus6PoaCri);
        listaOnibus.add(onibus10CriFlo);
        listaOnibus.add(onibus16PoaFlo);
        listaOnibus.add(onibus16PoaCri);
        listaOnibus.add(onibus20CriFlo);

        for (Onibus bus : listaOnibus) {
            System.out.println(bus.toString());
        }
    }

    public void visualizaOnibus(ArrayList<Onibus> onibus, int horario) {
        for (Onibus bus : onibus) {
            if (bus.getHorario() == horario) {
                System.out.println("Rota: " + bus.getPartida() + " -> " + bus.getDestino());
                System.out.println("Horario: " + bus.getHorario() + "H");
                System.out.println("Disponibilidade dos assentos: ");
                bus.visualizaLugares();
            }
        }
    }

    public void executaInterface() {
        iniciaInterface();

        while (true) {
            System.out.println("Escolha uma das opções pelo seu numero: ");
            System.out.println("1. Visualizar mapa de assentos por horario;");
            System.out.println("2. Reserva passagem;");
            System.out.println("3. Libera um assento");
            System.out.println("4. Encontrar assentos livres");
            System.out.println("5. Dados estatísticos");
            System.out.println("6. Finalizar programa");

            Scanner teclado = new Scanner(System.in);

            System.out.println("Digite a opção desejada:");
            int opcao = teclado.nextInt();

            switch (opcao) {
                case 1:
                    visualizaOnibus(listaOnibus, perguntaHorario(teclado));
                    break;
                case 2:
                    System.out.println("Digite o numero do assento desejado");
                    reservaPassagem(teclado.nextInt(), listaOnibus, teclado);
                    break;
                case 3:
                    System.out.println("Digite o numero do assento desejado");
                    liberaAssento(teclado.nextInt(), teclado);
                    break;

                case 4:
                    System.out.println("Digite o numero de assentos desejados");
                    encontraLivres(teclado.nextInt(), listaOnibus, teclado);
                    break;

                case 5:

                case 6:
                    System.exit(0);

            }
        }
    }

    public void reservaPassagem(int assento, ArrayList<Onibus> listaOnibus, Scanner teclado) {
        int horario = perguntaHorario(teclado);

        if (horario == 6) {
            try {
                System.out.println(
                        "Digite 1. para a linha Porto Alegre -> Florianopolis ou 2. para a linha Porto Alegre -> Criciuma");
                int opcao2 = teclado.nextInt();
                switch (opcao2) {
                    case 1:
                        listaOnibus.get(0).reservaAssento(assento);
                        break;
                    case 2:
                        listaOnibus.get(1).reservaAssento(assento);
                        break;
                }
            } catch (Exception e) {
                System.out.println("Numero ou letra invalida. Por favor, responda com 1 ou 2.");
            }

        }
        if (horario == 16) {
            System.out.println(
                    "Digite 1. para a linha Porto Alegre -> Florianopolis ou 2. para a linha Porto Alegre -> Criciuma");
            int opcao2 = teclado.nextInt();

            switch (opcao2) {
                case 1:
                    listaOnibus.get(3).reservaAssento(assento);
                    break;
                case 2:
                    listaOnibus.get(4).reservaAssento(assento);
                    break;
            }
        }
        if (horario == 10) {
            listaOnibus.get(2).reservaAssento(assento);

        }
        if (horario == 20) {
            listaOnibus.get(5).reservaAssento(assento);
        }
    }

    public void liberaAssento(int assento, Scanner teclado) {
        boolean assentoLiberado = false;
        int horario = perguntaHorario(teclado);
        if (horario == 6) {

            System.out.println(
                    "Digite 1. para a linha Porto Alegre -> Florianopolis ou 2. para a linha Porto Alegre -> Criciuma");
            int opcao2 = teclado.nextInt();

            switch (opcao2) {
                case 1:
                    if (listaOnibus.get(0).getLugares().get(assento)) {
                        listaOnibus.get(0).getLugares().replace(assento, false);
                        listaOnibus.get(0).setLugares(listaOnibus.get(0).getLugares());
                        assentoLiberado = true;
                    }
                    break;
                case 2:
                    if (listaOnibus.get(1).getLugares().get(assento)) {
                        listaOnibus.get(1).getLugares().replace(assento, false);
                        listaOnibus.get(1).setLugares(listaOnibus.get(1).getLugares());
                        assentoLiberado = true;
                    }
                    break;
            }
        } else if (horario == 16) {
            System.out.println(
                    "Digite 1. para a linha Porto Alegre -> Florianopolis ou 2. para a linha Porto Alegre -> Criciuma");
            int opcao2 = teclado.nextInt();

            switch (opcao2) {
                case 1:
                    if (listaOnibus.get(3).getLugares().get(assento)) {
                        listaOnibus.get(3).getLugares().replace(assento, false);
                        listaOnibus.get(3).setLugares(listaOnibus.get(3).getLugares());
                        assentoLiberado = true;
                    }
                    break;
                case 2:
                    if (listaOnibus.get(4).getLugares().get(assento)) {
                        listaOnibus.get(4).getLugares().replace(assento, false);
                        listaOnibus.get(4).setLugares(listaOnibus.get(4).getLugares());
                        assentoLiberado = true;
                    }
                    break;
            }

        } else if (horario == 10) {
            if (listaOnibus.get(2).getLugares().get(assento)) {
                listaOnibus.get(2).getLugares().replace(assento, false);
                listaOnibus.get(2).setLugares(listaOnibus.get(2).getLugares());
                assentoLiberado = true;
            }
        } else if (horario == 20) {
            if (listaOnibus.get(5).getLugares().get(assento)) {
                listaOnibus.get(5).getLugares().replace(assento, false);
                listaOnibus.get(5).setLugares(listaOnibus.get(5).getLugares());
                assentoLiberado = true;
            }
        }
        if (assentoLiberado) {
            System.out.println("Assento liberado com sucesso");
        } else {
            System.out.println("Assento já está disponivel");
        }
    }

    public void encontraLivres(int assento, ArrayList<Onibus> listaOnibus, Scanner teclado) {
        int horario = perguntaHorario(teclado);

        if (horario == 6) {
            try {
                System.out.println(
                        "Digite 1. para a linha Porto Alegre -> Florianopolis ou 2. para a linha Porto Alegre -> Criciuma");
                int opcao2 = teclado.nextInt();
                switch (opcao2) {
                    case 1:
                        HashMap<Integer, Boolean> lugaresBus = listaOnibus.get(0).getLugares();
                        boolean livre = true;
                        for (int i = 1; i < lugaresBus.size() + 1; i++) {
                            livre = true;
                            for (int j = 0; j < assento; j++) {
                                if (lugaresBus.get(i + j)) {
                                    livre = false;
                                    break;
                                }
                                ;
                            }

                            if (livre) {
                                System.out.println("Assentos livres em sequencia: ");
                                for (int j = 0; j < assento; j++) {
                                    System.out.println(i + j);
                                    listaOnibus.get(0).reservaAssento(i + j);
                                }
                                break;
                            }

                        }
                        break;
                    case 2:
                        HashMap<Integer, Boolean> lugaresBus2 = listaOnibus.get(1).getLugares();
                        boolean livre2 = true;
                        for (int i = 1; i < lugaresBus2.size() + 1; i++) {
                            livre2 = true;
                            for (int j = 0; j < assento; j++) {
                                if (lugaresBus2.get(i + j)) {
                                    livre2 = false;
                                    break;
                                }
                                ;
                            }
                            if (livre2) {
                                System.out.println("Assentos livres em sequencia: ");
                                for (int j = 0; j < assento; j++) {
                                    System.out.println(i + j);
                                    listaOnibus.get(1).reservaAssento(i + j);
                                }
                                break;
                            }
                        }
                        break;
                }
            } catch (Exception e) {
                System.out.println("Numero ou letra invalida. Por favor, responda com 1 ou 2.");
            }

        }
        if (horario == 16) {
            try {
                System.out.println(
                        "Digite 1. para a linha Porto Alegre -> Florianopolis ou 2. para a linha Porto Alegre -> Criciuma");
                int opcao2 = teclado.nextInt();
                switch (opcao2) {
                    case 1:
                        HashMap<Integer, Boolean> lugaresBus = listaOnibus.get(3).getLugares();
                        boolean livre = true;
                        for (int i = 1; i < lugaresBus.size() + 1; i++) {
                            livre = true;
                            for (int j = 0; j < assento; j++) {
                                if (lugaresBus.get(i + j)) {
                                    livre = false;
                                    break;
                                }
                                ;
                            }
                            if (livre) {
                                System.out.println("Assentos livres em sequencia: ");
                                for (int j = 0; j < assento; j++) {
                                    System.out.println(i + j);
                                    listaOnibus.get(3).reservaAssento(i + j);
                                }
                                break;
                            }
                        }
                        break;
                    case 2:
                        HashMap<Integer, Boolean> lugaresBus2 = listaOnibus.get(4).getLugares();
                        boolean livre2 = true;
                        for (int i = 1; i < lugaresBus2.size() + 1; i++) {
                            livre2 = true;
                            for (int j = 0; j < assento; j++) {
                                if (lugaresBus2.get(i + j)) {
                                    livre2 = false;
                                    break;
                                }
                                ;
                            }
                            if (livre2) {
                                System.out.println("Assentos livres em sequencia: ");
                                for (int j = 0; j < assento; j++) {
                                    System.out.println(i + j);
                                    listaOnibus.get(4).reservaAssento(i + j);
                                }
                                break;
                            }
                        }
                        break;
                }
            } catch (Exception e) {
                System.out.println("Numero ou letra invalida. Por favor, responda com 1 ou 2.");
            }

        }
        if (horario == 10) {
            HashMap<Integer, Boolean> lugaresBus = listaOnibus.get(2).getLugares();
            boolean livre = true;
            for (int i = 1; i < lugaresBus.size() + 1; i++) {
                livre = true;
                for (int j = 0; j < assento; j++) {
                    if (lugaresBus.get(i + j)) {
                        livre = false;
                        break;
                    }
                    ;
                }
                if (livre) {
                    System.out.println("Assentos livres em sequencia: ");
                    for (int j = 0; j < assento; j++) {
                        System.out.println(i + j);
                        listaOnibus.get(2).reservaAssento(i + j);
                    }
                    break;
                }
            }
        }
        if (horario == 20) {
            HashMap<Integer, Boolean> lugaresBus = listaOnibus.get(5).getLugares();
            boolean livre = true;
            for (int i = 1; i < lugaresBus.size() + 1; i++) {
                livre = true;
                for (int j = 0; j < assento; j++) {
                    if (lugaresBus.get(i + j)) {
                        livre = false;
                        break;
                    }
                    ;
                }
                if (livre) {
                    System.out.println("Assentos livres em sequencia: ");
                    for (int j = 0; j < assento; j++) {
                        System.out.println(i + j);
                        listaOnibus.get(5).reservaAssento(i + j);
                    }
                    break;
                }
            }
        }
    }

    private int perguntaHorario(Scanner teclado) {
        System.out.println("Escolha o horário da passagem: ");
        System.out.println("Opções: 6, 10, 16 ou 20");

        int horario = teclado.nextInt();

        return horario;
    }

    private String perguntaRotaDoBus(int horario, Scanner teclado) {
        System.out.println("Escolha a rota do ônibus do horário selecionado: ");
        System.out.println("");
        return "";
    }
}
